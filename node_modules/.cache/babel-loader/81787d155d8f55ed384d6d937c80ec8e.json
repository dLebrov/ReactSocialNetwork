{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactSocial\\\\ReactSocialNetwork\\\\src\\\\components\\\\users\\\\paginator.js\";\nimport style from \"./paginator.module.css\";\nimport React, { useState } from \"react\";\nimport cn from \"classnames\";\nexport const Paginator = props => {\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / props.portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\n  let rightPortionPageNumber = portionNumber * props.portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: style.portionNumberLeft,\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"\\u27A4\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn({\n        [style.selectedPage]: props.currentPage === p\n      }, style.pageNumber),\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    className: style.portionNumberRight,\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"\\u27A4\"));\n};","map":{"version":3,"sources":["D:/ReactSocial/ReactSocialNetwork/src/components/users/paginator.js"],"names":["style","React","useState","cn","Paginator","props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionSize","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","portionNumberLeft","filter","p","map","selectedPage","currentPage","pageNumber","e","onPageChanged","portionNumberRight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAChC,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,eAAN,GAAwBJ,KAAK,CAACK,QAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIN,UAArB,EAAiCM,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,KAAK,CAACU,WAA7B,CAAnB;AACA,MAAI,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBX,KAAK,CAACU,WAA5B,GAA0C,CAAtE;AACA,MAAII,sBAAsB,GAAGH,aAAa,GAAGX,KAAK,CAACU,WAAnD;AACA,sBACI;AAAK,IAAA,SAAS,EAAEf,KAAK,CAACoB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,aAAa,GAAG,CAAhB,iBACD;AAAQ,IAAA,SAAS,EAAEhB,KAAK,CAACqB,iBAAzB;AAA4C,IAAA,OAAO,EAAE,MAAM;AAACJ,MAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AAAmC,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIKL,KAAK,CACDW,MADJ,CACWC,CAAC,IAAIA,CAAC,IAAIL,qBAAL,IAA8BK,CAAC,IAAIJ,sBADnD,EAEIK,GAFJ,CAESD,CAAD,IAAO;AACR,wBAAO;AAAM,MAAA,SAAS,EAAGpB,EAAE,CAAC;AAAE,SAACH,KAAK,CAACyB,YAAP,GAC1BpB,KAAK,CAACqB,WAAN,KAAsBH;AADE,OAAD,EACGvB,KAAK,CAAC2B,UADT,CAApB;AAEQ,MAAA,OAAO,EAAGC,CAAD,IAAO;AACZvB,QAAAA,KAAK,CAACwB,aAAN,CAAoBN,CAApB;AACH,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIYA,CAJZ,CAAP;AAKH,GARJ,CAJL,EAaKT,YAAY,GAAGE,aAAf,iBACD;AAAQ,IAAA,SAAS,EAAEhB,KAAK,CAAC8B,kBAAzB;AAA6C,IAAA,OAAO,EAAE,MAAM;AAACb,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAoC,KAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,CADJ;AAmBH,CA9BM","sourcesContent":["import style from \"./paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nexport const Paginator = (props) => {\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * props.portionSize;\r\n    return (\r\n        <div className={style.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button className={style.portionNumberLeft} onClick={() => {setPortionNumber(portionNumber -1)}}>➤</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span className={ cn({ [style.selectedPage]:\r\n                        props.currentPage === p}, style.pageNumber) }\r\n                                   onClick={(e) => {\r\n                                       props.onPageChanged(p);\r\n                                   }}>{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n            <button className={style.portionNumberRight} onClick={() => {setPortionNumber(portionNumber + 1)}}>➤</button>\r\n            }\r\n        </div>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}