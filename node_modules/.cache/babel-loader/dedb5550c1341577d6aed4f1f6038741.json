{"ast":null,"code":"import React from'react';import{Field,reduxForm}from\"redux-form\";import{Input}from\"../common/FromsControls/FormsControls\";import{required}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{login,logout}from\"../../redux/auth-reducer\";import{Redirect}from\"react-router-dom\";import s from'../common/FromsControls/FormsControls.module.css';var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{placeholder:\"email\",name:\"email\",component:Input,validate:[required]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{placeholder:\"Password\",name:\"password\",type:\"password\",component:Input,validate:[required]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{component:Input,name:\"rememberMe\",type:\"checkbox\"}),\" Remember me\"),error&&/*#__PURE__*/React.createElement(\"div\",{className:s.formSummaryError},error),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",null,\"Login\")));};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.rememberMe);};if(props.isAuth){return/*#__PURE__*/React.createElement(Redirect,{to:\"/profile\"});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"LOGIN\"),/*#__PURE__*/React.createElement(LoginReduxForm,{onSubmit:onSubmit}));};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["C:/Users/Дмитрий/Desktop/сайт 4/ReactSocialNetwork/src/components/login/login.jsx"],"names":["React","Field","reduxForm","Input","required","connect","login","logout","Redirect","s","LoginForm","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,KAAR,KAAoB,uCAApB,CACA,OAAQC,QAAR,KAAuB,mCAAvB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,KAAR,CAAeC,MAAf,KAA4B,0BAA5B,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,MAAOC,CAAAA,CAAP,KAAc,kDAAd,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2B,IAAzBC,CAAAA,YAAyB,MAAzBA,YAAyB,CAAXC,KAAW,MAAXA,KAAW,CACzC,mBAAO,4BAAM,QAAQ,CAAED,YAAhB,eACH,4CACI,oBAAC,KAAD,EAAO,WAAW,CAAE,OAApB,CACO,IAAI,CAAE,OADb,CAEO,SAAS,CAAER,KAFlB,CAGO,QAAQ,CAAE,CAACC,QAAD,CAHjB,EADJ,CADG,cAOH,4CACI,oBAAC,KAAD,EAAO,WAAW,CAAE,UAApB,CACO,IAAI,CAAE,UADb,CAEO,IAAI,CAAE,UAFb,CAGO,SAAS,CAAED,KAHlB,CAIO,QAAQ,CAAE,CAACC,QAAD,CAJjB,EADJ,CAPG,cAcH,4CACI,oBAAC,KAAD,EAAO,SAAS,CAAED,KAAlB,CAAyB,IAAI,CAAE,YAA/B,CAA6C,IAAI,CAAE,UAAnD,EADJ,gBAdG,CAiBFS,KAAK,eAAI,2BAAK,SAAS,CAAEH,CAAC,CAACI,gBAAlB,EACLD,KADK,CAjBP,cAoBH,4CACI,0CADJ,CApBG,CAAP,CA0BH,CA3BD,CA6BA,GAAME,CAAAA,cAAc,CAAGZ,SAAS,CAAC,CAACa,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BL,SAA3B,CAAvB,CAGA,GAAMM,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BF,KAAK,CAACX,KAAN,CAAYa,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAGA,GAAIL,KAAK,CAACM,MAAV,CAAkB,CACd,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CACD,mBACI,4CACI,sCADJ,cAEI,oBAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFJ,CADJ,CAMH,CAbD,CAeA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADa,CAAZ,EAAxB,CAGA,cAAelB,CAAAA,OAAO,CAACmB,eAAD,CAAkB,CAAClB,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAkCU,KAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FromsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from '../common/FromsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <Field placeholder={\"email\"}\r\n                   name={\"email\"}\r\n                   component={Input}\r\n                   validate={[required]}/>\r\n        </div>\r\n        <div>\r\n            <Field placeholder={\"Password\"}\r\n                   name={\"password\"}\r\n                   type={\"password\"}\r\n                   component={Input}\r\n                   validate={[required]}/>\r\n        </div>\r\n        <div>\r\n            <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> Remember me\r\n        </div>\r\n        {error && <div className={s.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>\r\n                Login\r\n            </button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}