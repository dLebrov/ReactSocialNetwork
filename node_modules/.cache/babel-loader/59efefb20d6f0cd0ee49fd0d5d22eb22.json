{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\REACT\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\REACT\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"D:\\\\REACT\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\REACT\\\\project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{profileAPI,usersAPI}from\"../api/api\";var ADD_POST='ADD-POST';var SET_USER_PROFILE='SET_USER_PROFILE';var SET_STATUS='SET_STATUS';var initialState={posts:[{id:1,message:'Привет, как дела ?',like:15},{id:2,message:\"Это мой первый пост !\",like:20}],profile:null,status:\"\"};var profileReducer=function profileReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ADD_POST:{var newPost={id:5,message:action.newPostText,like:0};return _objectSpread({},state,{posts:[].concat(_toConsumableArray(state.posts),[newPost])});}case SET_USER_PROFILE:{return _objectSpread({},state,{profile:action.profile});}case SET_STATUS:{return _objectSpread({},state,{status:action.status});}default:return state;}};export var setStatus=function setStatus(status){return{type:SET_STATUS,status:status};};export var addPostActionCreator=function addPostActionCreator(newPostText){return{type:ADD_POST,newPostText:newPostText};};export var setUserProfile=function setUserProfile(profile){return{type:SET_USER_PROFILE,profile:profile};};export var getUserProfile=function getUserProfile(userId){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return usersAPI.getProfile(userId);case 2:response=_context.sent;dispatch(setUserProfile(response.data));case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};// can use async - await\nexport var getStatus=function getStatus(userId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return profileAPI.getStatus(userId);case 2:response=_context2.sent;dispatch(setStatus(response.data));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// or use .then\nexport var updateStatus=function updateStatus(status){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return profileAPI.updateStatus(status);case 2:response=_context3.sent;if(response.data.resultCode===0){dispatch(setStatus(status));}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export default profileReducer;","map":{"version":3,"sources":["D:/REACT/project/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","like","profile","status","profileReducer","state","action","type","newPost","newPostText","setStatus","addPostActionCreator","setUserProfile","getUserProfile","userId","dispatch","getProfile","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет, как дела ?', like: 15},\r\n        {id: 2, message: \"Это мой первый пост !\", like: 20}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                like: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n// can use async - await\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data))\r\n};\r\n\r\n// or use .then\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}