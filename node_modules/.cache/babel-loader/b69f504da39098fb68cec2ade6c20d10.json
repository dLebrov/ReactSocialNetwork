{"ast":null,"code":"import React from'react';import s from\"./Dialogs.module.css\";import DialogItem from\"./DialogItem/DialogItem\";import Message from\"./Message/Message\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../utils/validators/validators\";import Button from\"@material-ui/core/Button\";import Icon from\"@material-ui/core/Icon\";import TextFieldSizes from\"../MaterialUi/DialogsUI\";import{makeStyles}from\"@material-ui/core/styles\";import Grid from\"@material-ui/core/Grid\";import Paper from\"@material-ui/core/Paper\";var Dialogs=function Dialogs(props){var state=props.dialogsPage;var dialogsElements=state.dialogs.map(function(d){return/*#__PURE__*/React.createElement(DialogItem,{name:d.name,key:d.id,id:d.id});});var messagesElements=state.messages.map(function(m){return/*#__PURE__*/React.createElement(Message,{message:m.message,key:m.id,id:m.id});});var addNewMessage=function addNewMessage(values){props.sendMessage(values.newMessageBody);};var useStyles=makeStyles(function(theme){return{root:{flexGrow:4},paper:{padding:theme.spacing(5),background:\"#f5f5f5\"}};});var classes=useStyles();return/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(\"div\",{className:s.dialogs},/*#__PURE__*/React.createElement(\"div\",{className:s.dialogsItems},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},dialogsElements)),/*#__PURE__*/React.createElement(\"div\",{className:s.messages},/*#__PURE__*/React.createElement(Paper,{className:classes.paper},messagesElements))),/*#__PURE__*/React.createElement(\"div\",{className:s.addMessage}),/*#__PURE__*/React.createElement(DialogsReduxForm,{onSubmit:addNewMessage}));};var maxLength=maxLengthCreator(50);var DialogsForm=function DialogsForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:s.formMessage},/*#__PURE__*/React.createElement(\"div\",{className:s.input},/*#__PURE__*/React.createElement(Field,{component:TextFieldSizes,onSubmit:props.handleSubmit,name:\"newMessageBody\",validate:[required,maxLength]})),/*#__PURE__*/React.createElement(\"div\",{className:s.button},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",endIcon:/*#__PURE__*/React.createElement(Icon,null,\"send\"),onClick:props.handleSubmit},\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"))));};var DialogsReduxForm=reduxForm({form:\"dialogForm\"})(DialogsForm);export default Dialogs;","map":{"version":3,"sources":["C:/Users/Дмитрий/Desktop/сайт 4/ReactSocialNetwork/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","maxLengthCreator","required","Button","Icon","TextFieldSizes","makeStyles","Grid","Paper","Dialogs","props","state","dialogsPage","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","addNewMessage","values","sendMessage","newMessageBody","useStyles","theme","root","flexGrow","paper","padding","spacing","background","classes","dialogsItems","addMessage","maxLength","DialogsForm","handleSubmit","formMessage","input","button","DialogsReduxForm","form"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TextFieldSizes from \"../MaterialUi/DialogsUI\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => (<DialogItem name={d.name} key={d.id} id={d.id}/>));\r\n    let messagesElements = state.messages.map(m => (<Message message={m.message} key={m.id} id={m.id}/>));\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 4,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(5),\r\n            background: \"#f5f5f5\"\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    <Paper className={classes.paper}>\r\n                        {dialogsElements}\r\n                    </Paper>\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <Paper className={classes.paper}>\r\n                        {messagesElements}\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            <div className={s.addMessage}>\r\n            </div>\r\n                <DialogsReduxForm onSubmit={addNewMessage}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nlet maxLength = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className={s.formMessage}>\r\n            <div className={s.input}>\r\n                <Field component={TextFieldSizes}\r\n                       onSubmit={props.handleSubmit}\r\n                       name={\"newMessageBody\"}\r\n                       validate={[required, maxLength]}/>\r\n            </div>\r\n            <div className={s.button}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        endIcon={<Icon>send</Icon>}\r\n                        onClick={props.handleSubmit}\r\n                >Отправить</Button>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: \"dialogForm\"})(DialogsForm)\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}