{"ast":null,"code":"import React from 'react';\nimport { usersAPI } from \"../api/api\";\nconst FOLLOW = `FOLLOW`;\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet usersState = {\n  users: [],\n  pageSize: 10,\n  totalUserCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = usersState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUserCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id !== action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unFollowSuccess = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const setIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  userId\n});\nexport const requestUsers = (page, pageSize) => {\n  return async dispatch => {\n    dispatch(setIsFetching(true));\n    let data = await usersAPI.getUsers(page, pageSize);\n    dispatch(setIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n  };\n};\n\nconst followUnFollowFlow = async (dispatch, userId, ApiMethod, SubscriptionSuccess) => {\n  dispatch(toggleIsFollowingProgress(true, userId));\n  let response = await ApiMethod(userId);\n\n  if (response.data.resultCode === 0) {\n    dispatch(SubscriptionSuccess(userId));\n    dispatch(toggleIsFollowingProgress(false, userId));\n  }\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    await followUnFollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n  };\n};\nexport const unFollow = userId => {\n  return async dispatch => {\n    await followUnFollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess);\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/Дмитрий/Desktop/сайт 4/ReactSocialNetwork/src/redux/users-reducer.js"],"names":["React","usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","usersState","users","pageSize","totalUserCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userID","followed","count","userId","filter","followSuccess","unFollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","totalUsersCount","setIsFetching","toggleIsFollowingProgress","requestUsers","page","dispatch","data","getUsers","items","totalCount","followUnFollowFlow","ApiMethod","SubscriptionSuccess","response","resultCode","follow","bind","unFollow"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AAEA,MAAMC,MAAM,GAAI,QAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,4BAA4B,GAAG,8BAArC;AAEA,IAAIC,UAAU,GAAG;AACbC,EAAAA,KAAK,EAAE,EADM;AAEbC,EAAAA,QAAQ,EAAE,EAFG;AAGbC,EAAAA,cAAc,EAAE,CAHH;AAIbC,EAAAA,WAAW,EAAE,CAJA;AAKbC,EAAAA,UAAU,EAAE,KALC;AAMbC,EAAAA,mBAAmB,EAAE;AANR,CAAjB;;AASA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGR,UAAT,EAAqBS,MAArB,KAAgC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKjB,MAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKlB,QAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYU,GAAZ,CAAgBC,CAAC,IAAI;AACxB,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBAAO,EAAC,GAAGF,CAAJ;AAAOG,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH;;AACD,iBAAOH,CAAP;AACH,SALM;AAFJ,OAAP;;AASJ,SAAKjB,SAAL;AAAgB;AACZ,eAAO,EAAC,GAAGa,KAAJ;AAAWP,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAAzB,SAAP;AACH;;AACD,SAAKL,gBAAL;AAAuB;AACnB,eAAO,EAAC,GAAGY,KAAJ;AAAWJ,UAAAA,WAAW,EAAEK,MAAM,CAACL;AAA/B,SAAP;AACH;;AACD,SAAKP,qBAAL;AAA4B;AACxB,eAAO,EAAC,GAAGW,KAAJ;AAAWL,UAAAA,cAAc,EAAEM,MAAM,CAACO;AAAlC,SAAP;AACH;;AACD,SAAKlB,kBAAL;AAAyB;AACrB,eAAO,EAAC,GAAGU,KAAJ;AAAWH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA9B,SAAP;AACH;;AACD,SAAKN,4BAAL;AAAmC;AAC/B,eAAO,EACH,GAAGS,KADA;AAEHF,UAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GACf,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACQ,MAAtC,CADe,GAEfT,KAAK,CAACF,mBAAN,CAA0BY,MAA1B,CAAiCL,EAAE,IAAIA,EAAE,KAAKJ,MAAM,CAACQ,MAArD;AAJH,SAAP;AAMH;;AACD;AACI,aAAOT,KAAP;AA1CR;AA4CH,CA7CD;;AA8CA,OAAO,MAAMW,aAAa,GAAIL,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEjB,MAAP;AAAeqB,EAAAA;AAAf,CAAb,CAAtB;AACP,OAAO,MAAMM,eAAe,GAAIN,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEhB,QAAP;AAAiBoB,EAAAA;AAAjB,CAAb,CAAxB;AACP,OAAO,MAAMO,QAAQ,GAAIpB,KAAD,KAAY;AAACS,EAAAA,IAAI,EAAEf,SAAP;AAAkBM,EAAAA;AAAlB,CAAZ,CAAjB;AACP,OAAO,MAAMqB,cAAc,GAAIlB,WAAD,KAAkB;AAACM,EAAAA,IAAI,EAAEd,gBAAP;AAAyBQ,EAAAA;AAAzB,CAAlB,CAAvB;AACP,OAAO,MAAMmB,kBAAkB,GAAIC,eAAD,KAAsB;AAACd,EAAAA,IAAI,EAAEb,qBAAP;AAA8BmB,EAAAA,KAAK,EAAEQ;AAArC,CAAtB,CAA3B;AACP,OAAO,MAAMC,aAAa,GAAIpB,UAAD,KAAiB;AAACK,EAAAA,IAAI,EAAEZ,kBAAP;AAA2BO,EAAAA;AAA3B,CAAjB,CAAtB;AACP,OAAO,MAAMqB,yBAAyB,GAAG,CAACrB,UAAD,EAAaY,MAAb,MAAyB;AAC9DP,EAAAA,IAAI,EAAEX,4BADwD;AAE9DM,EAAAA,UAF8D;AAG9DY,EAAAA;AAH8D,CAAzB,CAAlC;AAMP,OAAO,MAAMU,YAAY,GAAG,CAACC,IAAD,EAAO1B,QAAP,KAAoB;AAC5C,SAAO,MAAO2B,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACJ,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,QAAIK,IAAI,GAAG,MAAMtC,QAAQ,CAACuC,QAAT,CAAkBH,IAAlB,EAAwB1B,QAAxB,CAAjB;AACA2B,IAAAA,QAAQ,CAACJ,aAAa,CAAC,KAAD,CAAd,CAAR;AACAI,IAAAA,QAAQ,CAACR,QAAQ,CAACS,IAAI,CAACE,KAAN,CAAT,CAAR;AACAH,IAAAA,QAAQ,CAACN,kBAAkB,CAACO,IAAI,CAACG,UAAN,CAAnB,CAAR;AACH,GAND;AAOH,CARM;;AAUP,MAAMC,kBAAkB,GAAI,OAAOL,QAAP,EAAiBZ,MAAjB,EAAyBkB,SAAzB,EAAoCC,mBAApC,KAA4D;AAChFP,EAAAA,QAAQ,CAACH,yBAAyB,CAAC,IAAD,EAAOT,MAAP,CAA1B,CAAR;AACA,MAAIoB,QAAQ,GAAG,MAAMF,SAAS,CAAClB,MAAD,CAA9B;;AACA,MAAIoB,QAAQ,CAACP,IAAT,CAAcQ,UAAd,KAA6B,CAAjC,EAAoC;AAChCT,IAAAA,QAAQ,CAACO,mBAAmB,CAACnB,MAAD,CAApB,CAAR;AACJY,IAAAA,QAAQ,CAACH,yBAAyB,CAAC,KAAD,EAAQT,MAAR,CAA1B,CAAR;AACH;AACJ,CAPD;;AASA,OAAO,MAAMsB,MAAM,GAAItB,MAAD,IAAY;AAC9B,SAAO,MAAOY,QAAP,IAAoB;AACvB,UAAMK,kBAAkB,CAACL,QAAD,EAAWZ,MAAX,EAAkBzB,QAAQ,CAAC+C,MAAT,CAAgBC,IAAhB,CAAqBhD,QAArB,CAAlB,EAAkD2B,aAAlD,CAAxB;AACH,GAFD;AAGH,CAJM;AAMP,OAAO,MAAMsB,QAAQ,GAAIxB,MAAD,IAAY;AAChC,SAAO,MAAOY,QAAP,IAAoB;AACvB,UAAMK,kBAAkB,CAACL,QAAD,EAAWZ,MAAX,EAAmBzB,QAAQ,CAACiD,QAAT,CAAkBD,IAAlB,CAAuBhD,QAAvB,CAAnB,EAAqD4B,eAArD,CAAxB;AACH,GAFD;AAGH,CAJM;AAMP,eAAeb,YAAf","sourcesContent":["import React from 'react';\r\nimport {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = `FOLLOW`;\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet usersState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = usersState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUserCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const followSuccess = (userID) => ({type: FOLLOW, userID});\r\nexport const unFollowSuccess = (userID) => ({type: UNFOLLOW, userID});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(setIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnFollowFlow =  async (dispatch, userId, ApiMethod, SubscriptionSuccess) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId));\r\n        let response = await ApiMethod(userId);\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(SubscriptionSuccess(userId));\r\n        dispatch(toggleIsFollowingProgress(false, userId));\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userId,usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\n\r\nexport const unFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnFollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unFollowSuccess);\r\n    }\r\n};\r\n\r\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}