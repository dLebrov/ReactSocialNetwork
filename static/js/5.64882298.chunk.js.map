{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["DialogItem","props","style","textDecoration","to","id","className","s","dialog","src","photos","user","alt","dialogMain","name","Dialogs","dialogsElements","allDialogs","map","d","userName","key","small","allWiew","dialogs","dialogsItems","dialogsElemnts","compose","connect","state","dialogsPage","allMessages","messages","sendMessage","SendMessageCreator","setDialogs","getAllDialogs","getAllMessages","withRouter","withAuthRedirect","useEffect","getFriendId"],"mappings":"uLAoBeA,EAdI,SAACC,GAEhB,OACQ,kBAAC,IAAD,CAASC,MAAO,CAAEC,eAAgB,QAAUC,GAAK,YAAcH,EAAMI,IACjE,yBAAKC,UAAWC,IAAEC,QACd,yBAAKC,IAAMR,EAAMS,OAAeT,EAAMS,OAAZC,IAAoBC,IAAI,KAClD,0BAAMN,UAAYC,IAAEM,YAAaZ,EAAMa,S,QCa5CC,EAnBC,SAACd,GACb,IAAIe,EAAkBf,EAAMgB,WAAWC,KAAI,SAAAC,GAAC,OAC5C,kBAAC,EAAD,CAAYL,KAAMK,EAAEC,SAAUC,IAAKF,EAAEd,GAAIA,GAAIc,EAAEd,GAAIK,OAAQS,EAAET,OAAOY,WACpE,OAAKrB,EAAMgB,WAGH,yBAAKX,UAAWC,IAAEgB,SAClB,yBAAKjB,UAAWC,IAAEiB,SACd,yBAAKlB,UAAWC,IAAEkB,cACd,yBAAKnB,UAAWC,IAAEmB,gBACbV,MANV,kBAAC,IAAD,O,gCCgBAW,4BAAQC,aARD,SAACC,GACnB,MAAO,CACHZ,WAAYY,EAAMC,YAAYN,QAC9BO,YAAaF,EAAMC,YAAYE,YAMnC,CAACC,YAAYC,IACTC,WAAWC,IACXC,qBAEJC,IACAC,IANWZ,EAhBU,SAAC1B,GAGtB,OAFAuC,qBAAW,WACPvC,EAAMkC,eAAgB,IAEtB,kBAAC,EAAD,CAASM,YAAaxC,EAAMwC,YAAaxB,WAAYhB,EAAMgB,WAAYc,YAAa9B,EAAM8B,YAAaE,YAAahC,EAAMgC","file":"static/js/5.64882298.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink, Route, withRouter} from \"react-router-dom\";\r\nimport user from '../../img/user.png'\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n            <NavLink style={{ textDecoration: 'none' }} to ={'/dialogs/' + props.id}>\r\n                <div className={s.dialog}>\r\n                    <img src={!props.photos ? user: props.photos} alt=\"\"/>\r\n                    <span className= {s.dialogMain}>{props.name}</span> \r\n                </div>\r\n            </NavLink>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Preloader from '../common/preloader/preloader';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.allDialogs.map(d => (\r\n    <DialogItem name={d.userName} key={d.id} id={d.id} photos={d.photos.small}/>));\r\n    if (!props.allDialogs) {\r\n        return <Preloader/>\r\n    }\r\n    return (<div className={s.allWiew}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    <div className={s.dialogsElemnts}>\r\n                        {dialogsElements}\r\n                    </div>\r\n                        \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {useEffect} from 'react';\r\nimport {SendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport { getAllDialogs, getAllMessages } from '../../redux/dialogs-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nconst DialogsContainer = (props) => {\r\n    useEffect( () => {\r\n        props.setDialogs()} , []);\r\n    return (\r\n        <Dialogs getFriendId={props.getFriendId} allDialogs={props.allDialogs} allMessages={props.allMessages} sendMessage={props.sendMessage} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        allDialogs: state.dialogsPage.dialogs,\r\n        allMessages: state.dialogsPage.messages\r\n\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, \r\n    {sendMessage:SendMessageCreator,\r\n        setDialogs:getAllDialogs,\r\n        getAllMessages,\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(DialogsContainer);"],"sourceRoot":""}