{"version":3,"sources":["components/profile/profileinfo/profileinfo.module.css","components/profile/profileinfo/profileStatus/profileStatus.module.css","components/profile/MyPosts/MyPosts.module.css","components/profile/MyPosts/post/Post.module.css","components/profile/profileinfo/profileStatus/ProfileStatusWithHooks.js","components/profile/profileinfo/ProfileDataForm.jsx","components/profile/profileinfo/profileinfo.jsx","components/profile/MyPosts/post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/profile.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","span","onClick","input","onChange","e","currentTarget","value","autoFocus","onKeyPress","enter","charCode","updateStatus","button","ProfileDataReduxForm","reduxForm","form","ModalStyled","styled","div","Modal","show","onHide","setShow","size","aria-labelledby","centered","backdrop","keyboard","Header","closeButton","Title","id","onSubmit","handleSubmit","Body","des","createField","Input","checkBox","type","Object","keys","profile","contacts","map","key","error","style","formSummaryError","Footer","buttonModal","ProfileData","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","isOwner","handleShow","Contact","href","target","ProfileInfo","allData","userId","allProfile","all","description","document","getElementById","click","logo","src","photos","large","user","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","item","img","alt","message","like","MyPosts","React","memo","createRef","postsElement","post","p","MyPost","MyPostReduxForm","values","addPost","newPostText","maxLength","maxLengthCreator","Field","validate","required","placeholder","component","Textarea","name","textarea","Profile","compose","connect","state","profilePage","posts","dispatch","addPostActionCreator","setProfile","loading","setLoading","me","useSelector","auth","match","params","checker","ProfileContainer","this","AuthUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/4.051ea02f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"profileinfo_logo__-ZLd5\",\"allProfile\":\"profileinfo_allProfile__2iqIr\",\"all\":\"profileinfo_all__3lvx_\",\"description\":\"profileinfo_description__1PNCC\",\"input\":\"profileinfo_input__2ROkp\",\"des\":\"profileinfo_des__2mgho\",\"contacts\":\"profileinfo_contacts__himN3\",\"button\":\"profileinfo_button__3j9F6\",\"buttonModal\":\"profileinfo_buttonModal__3zvck\",\"checkBox\":\"profileinfo_checkBox__1ysiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"profileStatus_input__D2zhv\",\"button\":\"profileStatus_button__2EhDJ\",\"span\":\"profileStatus_span__1W3d1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"click\":\"MyPosts_click__3vyjv\",\"textarea\":\"MyPosts_textarea__3juEw\",\"MyPost\":\"MyPosts_MyPost__1796P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__KNO_M\",\"button\":\"Post_button__3sSYo\",\"item\":\"Post_item__1jdmn\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './profileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)} , [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus (status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    };\r\n\r\n    const deactivateEditModeEnter = (enter) => {\r\n        if (enter.charCode === 13){\r\n            setEditMode(false);\r\n            props.updateStatus (status)\r\n        }\r\n    };\r\n\r\n    /*componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n\r\n            { !editMode &&\r\n            <div>\r\n                <span className={s.span} onClick={activateEditMode} >{\"Статус: \" + props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                Статус:\r\n                <input className={s.input} onChange={onStatusChange} autoFocus={true} onKeyPress={deactivateEditModeEnter} value={status}/>\r\n                <button className={s.button} onClick={deactivateEditMode} >Сохранить</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React, {useState} from \"react\";\r\nimport s from \"./../profileinfo/profileinfo.module.css\";\r\nimport {createField, Input} from \"../../common/FromsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FromsControls/FormsControls.module.css\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n    const handleClose = () => props.setShow(false);\r\n\r\n    const ModalStyled = styled.div`\r\n        background: #18191a;\r\n        color:#fff;\r\n        .close {\r\n            color:#fff;\r\n        }\r\n    `\r\n    \r\n    return (\r\n        <Modal show={props.show} onHide={handleClose} size=\"lg\" \r\n        aria-labelledby=\"contained-modal-title-vcenter\" centered \r\n        backdrop=\"static\" keyboard={false}>\r\n            <ModalStyled>\r\n            <Modal.Header closeButton>  \r\n                <Modal.Title id=\"contained-modal-title-vcenter\">Информация</Modal.Title>\r\n            </Modal.Header>\r\n            <form onSubmit={props.handleSubmit}>\r\n            <Modal.Body>\r\n                <div className={s.des}>\r\n                <div>Имя:  {createField(\"Имя\", \"fullName\", [], Input)}</div>\r\n                <div>\r\n                    Статус: {createField (\"Статус\", \"status\", [], Input)}\r\n                </div>\r\n                <div className= {s.checkBox}>\r\n                    Работа: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n                <div>\r\n                    Мои скиллы: {createField(\"о работе\", \"lookingForAJobDescription\", [], Input)}\r\n                </div>\r\n                <div>\r\n                    Обо мне: {createField(\"Обо мне\", \"aboutMe\", [], Input)}\r\n                </div>\r\n                <div>\r\n                    Контакты: {(Object.keys(props.profile.contacts).map(key => {\r\n                    return <div>\r\n                        {createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n                }))}\r\n                </div>\r\n                {props.error && <div className={style.formSummaryError}>\r\n                    {props.error}\r\n                </div>}\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button className={s.buttonModal}>Сохранить</button>  \r\n            </Modal.Footer>\r\n            </form>\r\n            </ModalStyled>\r\n        </Modal>\r\n        \r\n    )\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport s from './profileinfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport user from '../../img/user.png'\r\nimport ProfileStatusWithHooks from \"./profileStatus/ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    //let [editMode, setEditMode] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const onSubmit = (formData) => {\r\n        props.updateStatus(formData.status);\r\n        props.saveProfile(formData).then (() => {\r\n            setShow(false);\r\n        })\r\n\r\n    };\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    function pro1() {\r\n            props.isOwner && document.getElementById(\"file\").click();\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let allData = { \r\n        aboutMe: props.profile.aboutMe, \r\n        status: props.status,\r\n        contacts: props.profile.contacts,\r\n        fullName: props.profile.fullName,\r\n        lookingForAJob: props.profile.lookingForAJob,\r\n        lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n        userId: props.profile.userId\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.allProfile}>\r\n                <div className={s.all}>\r\n                    <div>\r\n                        <div className={s.description}>\r\n                            <img onClick={pro1} className={s.logo} id=\"image\"\r\n                                src={props.profile.photos.large == null ? user : props.profile.photos.large}/>\r\n                            <input className={s.input} type=\"file\" id=\"file\" onChange={onMainPhotoSelected}/>\r\n\r\n                            {show ? <ProfileDataForm show={show} setShow={setShow} initialValues={allData} profile={props.profile}\r\n                                                        onSubmit = {onSubmit}/>\r\n                            : <ProfileData status={props.status}\r\n                                            updateStatus={props.updateStatus}\r\n                                            profile={props.profile}\r\n                                            isOwner={props.isOwner}\r\n                                            handleShow={handleShow}/>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <ul className={s.des}>\r\n            <li>\r\n                { \"Имя: \" + props.profile.fullName}\r\n            </li>\r\n            <li>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </li>\r\n            <li>\r\n                {\"Работа: \" + (!props.profile.lookingForAJob ? \"Нет\" : props.profile.lookingForAJob)}\r\n            </li>\r\n            <li>\r\n                {\"Мои скиллы: \" + (!props.profile.lookingForAJobDescription ? \"Нет\" : props.profile.lookingForAJobDescription)}\r\n            </li>\r\n            <li>\r\n                {\"Обо мне: \" + (!props.profile.aboutMe ? \"Нет\" : props.profile.aboutMe)}\r\n            </li>\r\n            <li>\r\n                {(Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} />\r\n                }))}\r\n            </li>\r\n            {props.isOwner && <button className={s.button} onClick={props.handleShow}>Редактировать</button>}\r\n        </ul>\r\n    )\r\n};\r\n\r\nconst Contact =(props) => {\r\n    return <div className={s.contacts}>{props.contactTitle}: <a href = {props.contactValue} target=\"blank\">{props.contactValue}</a></div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img className={s.img} src=\"https://klike.net/uploads/posts/2018-05/1525256972_15.jpg\" alt=\"\"/>\r\n                { props.message }\r\n                <div>\r\n                    <button className={s.button} href=\"#\" /*onClick={likeCount}*/>\r\n                        ❤\r\n                        {props.like}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FromsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo( props => {\r\n    let newPostElement = React.createRef();\r\n\r\n    let postsElement = props.post.map(p => (\r\n        <Post message={p.message} like={p.like}/>\r\n    ));\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.MyPost}>\r\n            <div>\r\n                Мои Записи\r\n            </div>\r\n            <MyPostReduxForm onSubmit={onAddPost}/>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst MyPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength]}\r\n                       placeholder={\"post message\"}\r\n                       component={Textarea} name={\"newPostText\"}\r\n                       className={s.textarea} />\r\n                <div>\r\n                    <button className={s.click} href=\"#\">Добавить</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm ({form: \"ProfileForm\"}) (MyPostForm)\r\n\r\nexport default MyPosts;","import React, { useState, useEffect } from \"react\";\r\nimport ProfileInfo from \"./profileinfo/profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Profile = (props) => {\r\n  const [profile, setProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  //аналог записи mapState\r\n  const me = useSelector((state) => state.auth);\r\n  // const mapStateToProps = (state) => {\r\n  //   return {\r\n  //     me: state.auth\r\n  //   }\r\n  // }\r\n  //\r\n  const userId = props.match.params.userId;\r\n  const checker = me && me !== null && props.profile ? true : false;\r\n  useEffect(() => {\r\n    //установка юзера\r\n    if (checker && me.userId !== props.profile.userId) {\r\n      setProfile(props.profile);\r\n      setLoading(false);\r\n    }\r\n    //\r\n    //установка моего\r\n    else if (checker && !userId && me.userId) {\r\n      setProfile(props.profile);\r\n      setLoading(false);\r\n    }\r\n    //\r\n    return () => {\r\n      setProfile(null);\r\n      setLoading(false);\r\n    };\r\n  }, [props.profile]);\r\n  if (loading) {\r\n    return \"\";\r\n  }\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      {/* <MyPostsContainer /> */}\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default  compose (connect (mapStateToProps, mapDispatchToProps)) (MyPosts)","import React from 'react';\r\nimport Profile from \"./profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport Preloader from '../common/preloader/preloader';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        this.userId = this.props.match.params.userId;\r\n        if (!this.userId) {\r\n            // check this section code and refactor\r\n            this.userId = this.props.AuthUserId;\r\n        }\r\n        this.props.getUserProfile(this.userId);\r\n        this.props.getStatus (this.userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.userId) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner = {!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status = {this.props.status}\r\n                     updateStatus ={this.props.updateStatus}\r\n                     savePhoto = {this.props.savePhoto}\r\n                     \r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    AuthUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter, withAuthRedirect\r\n) (ProfileContainer)\r\n"],"sourceRoot":""}