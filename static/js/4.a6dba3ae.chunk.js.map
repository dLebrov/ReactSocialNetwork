{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/profile/MyPosts/MyPosts.module.css","components/profile/MyPosts/post/Post.module.css","components/profile/profileinfo/profileinfo.module.css","components/profile/profileinfo/profileStatus/profileStatus.module.css","components/profile/MyPosts/post/Post.jsx","components/profile/MyPosts/MyPosts.jsx","components/profile/profileinfo/profileStatus/ProfileStatusWithHooks.js","components/profile/profileinfo/profileinfo.jsx","components/profile/MyPosts/MyPostsContainer.jsx","components/profile/profile.jsx","components/profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","img","src","alt","message","button","href","like","MyPosts","memo","createRef","postsElement","post","map","p","MyPost","MyPostReduxForm","onSubmit","values","addPost","newPostText","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","validate","required","placeholder","component","Textarea","name","textarea","click","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","span","onClick","input","onChange","e","currentTarget","value","autoFocus","onKeyPress","enter","charCode","updateStatus","ProfileInfo","profile","all","description","document","getElementById","logo","id","photos","large","user","type","target","files","length","savePhoto","des","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","vk","github","compose","profilePage","posts","dispatch","addPostActionCreator","Profile","isOwner","MyPostsContainer","ProfileContainer","userId","match","params","AuthUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","withRouter"],"mappings":"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","file":"static/js/4.a6dba3ae.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to = \"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"click\":\"MyPosts_click__3RCrh\",\"textarea\":\"MyPosts_textarea__1jHW_\",\"MyPost\":\"MyPosts_MyPost__2usdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__2mFZi\",\"button\":\"Post_button__cLSTS\",\"item\":\"Post_item__3RYjR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"profileinfo_logo__2fNZ4\",\"all\":\"profileinfo_all__1zM1Z\",\"description\":\"profileinfo_description__3X2jO\",\"input\":\"profileinfo_input__o-e-E\",\"des\":\"profileinfo_des__3ErgY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"profileStatus_input__2sYJt\",\"button\":\"profileStatus_button__1i_HN\",\"span\":\"profileStatus_span__29a9o\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div>\r\n                <img className={s.img} src=\"https://klike.net/uploads/posts/2018-05/1525256972_15.jpg\" alt=\"\"/>\r\n                { props.message }\r\n                <div>\r\n                    <button className={s.button} href=\"#\" /*onClick={likeCount}*/>\r\n                        ❤\r\n                        {props.like}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FromsControls/FormsControls\";\r\n\r\nconst MyPosts = React.memo( props => {\r\n    let newPostElement = React.createRef();\r\n\r\n    let postsElement = props.post.map(p => (\r\n        <Post message={p.message} like={p.like}/>\r\n    ));\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.MyPost}>\r\n            <div>\r\n                Мои Записи\r\n            </div>\r\n            <MyPostReduxForm onSubmit={onAddPost}/>\r\n            {postsElement}\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst MyPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field validate={[required, maxLength]}\r\n                       placeholder={\"post message\"}\r\n                       component={Textarea} name={\"newPostText\"}\r\n                       className={s.textarea} />\r\n                <div>\r\n                    <button className={s.click} href=\"#\">Добавить</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm ({form: \"ProfileForm\"}) (MyPostForm)\r\n\r\nexport default MyPosts;","import React, {useEffect, useState} from 'react';\r\nimport s from './profileStatus.module.css';\r\nimport Preloader from \"../../../common/preloader/preloader\";\r\nimport user from '../../../img/user.png'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)} , [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus (status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n\r\n    };\r\n\r\n    const deactivateEditModeEnter = (enter) => {\r\n        if (enter.charCode === 13){\r\n            setEditMode(false);\r\n            props.updateStatus (status)\r\n        }\r\n    };\r\n\r\n    /*componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }*/\r\n\r\n    return (\r\n        <div>\r\n\r\n            { !editMode &&\r\n            <div>\r\n                <span className={s.span} onClick={activateEditMode} >{\"Статус: \" + props.status}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                Статус:\r\n                <input className={s.input} onChange={onStatusChange} autoFocus={true} onKeyPress={deactivateEditModeEnter} value={status}/>\r\n                <button className={s.button} onClick={deactivateEditMode} >Сохранить</button>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './profileinfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport user from '../../img/user.png'\r\nimport ProfileStatusWithHooks from \"./profileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    function pro1(){\r\n        document.getElementById(\"file\").click();\r\n    }\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    //<img   src=\"https://wallbox.ru/resize/1024x1024/wallpapers/main/201333/devushka-krylya-sinij-52f2c8e.jpg\" /> - профиль\r\n    return (\r\n        <div>\r\n            {/*<div>\r\n                <img className={s.img} src={background} />\r\n            </div>*/}\r\n            <div className={s.all}>\r\n                <div>\r\n                    <div className={s.description}>\r\n                            <img onClick={pro1} className={s.logo} id=\"image\"\r\n                                 src={props.profile.photos.large == null ? user : props.profile.photos.large}/>\r\n                            <input className={s.input} type = \"file\" id = \"file\" onChange={onMainPhotoSelected} />\r\n                        <ul className={s.des}>\r\n                            <li>{\"Имя:  \" + props.profile.fullName}</li>\r\n                            <li>\r\n                                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                            </li>\r\n                            <li>\r\n                                {\"Работа: \" + (!props.profile.lookingForAJob ? \"Нет\" : props.profile.lookingForAJobDescription)}\r\n                            </li>\r\n                            <li>\r\n                                {\"Обо мне: \" + (!props.profile.aboutMe ? \"Нет\" : props.profile.aboutMe)}\r\n                            </li>\r\n                            <li>\r\n                                {\"VK: \" + (!props.profile.contacts.vk ? \"Нет\" : props.profile.contacts.vk)}\r\n                            </li>\r\n                            <li>\r\n                                {\"GitHub: \" + (!props.profile.contacts.github ? \"Нет\" : props.profile.contacts.github)}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nexport default  compose (connect (mapStateToProps, mapDispatchToProps)) (MyPosts)","import React from 'react';\r\nimport s from './profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./profileinfo/profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n        <ProfileInfo isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status = {props.status}\r\n                     updateStatus={props.updateStatus}\r\n                     savePhoto = {props.savePhoto}\r\n        />\r\n        <MyPostsContainer />\r\n    </div>\r\n    )\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./profile\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            // check this section code and refactor\r\n            userId = this.props.AuthUserId\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus (userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n        this.refreshProfile();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner = {!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status = {this.props.status}\r\n                     updateStatus ={this.props.updateStatus}\r\n                     savePhoto = {this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    AuthUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter, withAuthRedirect\r\n) (ProfileContainer)\r\n\r\n\r\n\r\n"],"sourceRoot":""}