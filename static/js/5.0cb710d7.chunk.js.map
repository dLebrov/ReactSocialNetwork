{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/MaterialUi/DialogsUI.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","s","dialog","src","alt","id","name","Message","text","message","TextFieldSizes","input","TextField","textarea","autoComplete","label","defaultValue","variant","size","maxLength","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","formMessage","Field","component","validate","required","button","Button","color","endIcon","Icon","onClick","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","classes","makeStyles","theme","root","flexGrow","paper","padding","spacing","background","useStyles","Grid","container","dialogsItems","Paper","addMessage","values","sendMessage","newMessageBody","compose","dispatch","SendMessageCreator"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,KAAO,sBAAsB,YAAc,6BAA6B,SAAW,0BAA0B,WAAa,4BAA4B,OAAS,wBAAwB,MAAQ,yB,uICGnWC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAK,eAHX,GACXC,IAAML,WAStC,OAFqCM,YAASX,EAATW,CAAsCL,K,+FCDhEM,EAXI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAEC,QACd,yBAAKC,IAAI,4DAA4DC,IAAI,KACzE,kBAAC,IAAD,CAASR,GAAK,YAAcD,EAAMU,IAAlC,IAAwCV,EAAMW,KAA9C,OCEGC,EAPC,SAACZ,GACb,OACI,yBAAKK,UAAWC,IAAEO,MAAOb,EAAMc,U,qDCDxB,SAASC,EAAT,GAAkC,IAATC,EAAQ,EAARA,MACpC,OACI,6BACI,kBAACC,EAAA,EAAD,eAAWZ,UAAWC,IAAEY,UACTF,EADf,CAEWG,aAAa,MACbT,GAAG,sBACHU,MAAM,oGACNC,aAAa,IACbC,QAAQ,WACRC,KAAK,Y,+BCuCxBC,EAAYC,YAAiB,IAuB3BC,EAAmBC,YAAU,CAACC,KAAM,cAAjBD,EArBL,SAAC3B,GACjB,OAAO,0BAAM6B,SAAU7B,EAAM8B,cACzB,yBAAKzB,UAAWC,IAAEyB,aACd,yBAAK1B,UAAWC,IAAEU,OACd,kBAACgB,EAAA,EAAD,CAAOC,UAAWlB,EACXc,SAAU7B,EAAM8B,aAChBnB,KAAM,iBACNuB,SAAU,CAACC,IAAUX,MAEhC,yBAAKnB,UAAWC,IAAE8B,QACd,kBAACC,EAAA,EAAD,CAAQf,QAAQ,YACRgB,MAAM,UACNC,QAAS,kBAACC,EAAA,EAAD,aACTC,QAASzC,EAAM8B,cAHvB,gEAaDY,EAhEC,SAAC1C,GACb,IAAIP,EAAQO,EAAM2C,YACdC,EAAkBnD,EAAMoD,QAAQC,KAAI,SAAAC,GAAC,OAAK,kBAAC,EAAD,CAAYpC,KAAMoC,EAAEpC,KAAMqC,IAAKD,EAAErC,GAAIA,GAAIqC,EAAErC,QACrFuC,EAAmBxD,EAAMyD,SAASJ,KAAI,SAAAK,GAAC,OAAK,kBAAC,EAAD,CAASrC,QAASqC,EAAErC,QAASkC,IAAKG,EAAEzC,GAAIA,GAAIyC,EAAEzC,QAaxF0C,EATYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHC,QAASJ,EAAMK,QAAQ,GACvBC,WAAY,cAGJC,GAChB,OACI,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACX,yBAAK1D,UAAWC,IAAEuC,SACd,yBAAKxC,UAAWC,IAAE0D,cACd,kBAACC,EAAA,EAAD,CAAO5D,UAAW+C,EAAQK,OACrBb,IAGT,yBAAKvC,UAAWC,IAAE4C,UACd,kBAACe,EAAA,EAAD,CAAO5D,UAAW+C,EAAQK,OACrBR,KAIb,yBAAK5C,UAAWC,IAAE4D,aAEd,kBAACxC,EAAD,CAAkBG,SA7BV,SAACsC,GACjBnE,EAAMoE,YAAYD,EAAOE,qB,wBCElBC,sBACXnE,aAfkB,SAACV,GACnB,MAAO,CACHkD,YAAalD,EAAMkD,gBAIF,SAAC4B,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAOpCzE,IAFW0E,CAGb5B","file":"static/js/5.0cb710d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1AaGj\",\"dialogsItems\":\"Dialogs_dialogsItems__321ck\",\"dialog\":\"Dialogs_dialog__2ac-f\",\"messages\":\"Dialogs_messages__1k1Km\",\"text\":\"Dialogs_text__3jYO9\",\"formMessage\":\"Dialogs_formMessage__3Yfj6\",\"textarea\":\"Dialogs_textarea__3jS_x\",\"addMessage\":\"Dialogs_addMessage__1km36\",\"button\":\"Dialogs_button__vE2z0\",\"input\":\"Dialogs_input__1wqoM\"};","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to = \"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src=\"https://klike.net/uploads/posts/2018-05/1525256972_15.jpg\" alt=\"\"/>\r\n            <NavLink to ={'/dialogs/' + props.id}> {props.name} </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.text}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import TextField from \"@material-ui/core/TextField\";\r\nimport s from \"../Dialogs/Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nexport default function TextFieldSizes({input}) {\r\n    return(\r\n        <div>\r\n            <TextField className={s.textarea}\r\n                       {...input}\r\n                       autoComplete=\"off\"\r\n                       id=\"outlined-size-small\"\r\n                       label=\"Введите сообщение\"\r\n                       defaultValue=\" \"\r\n                       variant=\"outlined\"\r\n                       size=\"small\"/>\r\n        </div>)}","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport TextFieldSizes from \"../MaterialUi/DialogsUI\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => (<DialogItem name={d.name} key={d.id} id={d.id}/>));\r\n    let messagesElements = state.messages.map(m => (<Message message={m.message} key={m.id} id={m.id}/>));\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 4,\r\n        },\r\n        paper: {\r\n            padding: theme.spacing(5),\r\n            background: \"#f5f5f5\"\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    <Paper className={classes.paper}>\r\n                        {dialogsElements}\r\n                    </Paper>\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <Paper className={classes.paper}>\r\n                        {messagesElements}\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            <div className={s.addMessage}>\r\n            </div>\r\n                <DialogsReduxForm onSubmit={addNewMessage}/>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nlet maxLength = maxLengthCreator(50);\r\n\r\nconst DialogsForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div className={s.formMessage}>\r\n            <div className={s.input}>\r\n                <Field component={TextFieldSizes}\r\n                       onSubmit={props.handleSubmit}\r\n                       name={\"newMessageBody\"}\r\n                       validate={[required, maxLength]}/>\r\n            </div>\r\n            <div className={s.button}>\r\n                <Button variant=\"contained\"\r\n                        color=\"primary\"\r\n                        endIcon={<Icon>send</Icon>}\r\n                        onClick={props.handleSubmit}\r\n                >Отправить</Button>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form: \"dialogForm\"})(DialogsForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {SendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(SendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}